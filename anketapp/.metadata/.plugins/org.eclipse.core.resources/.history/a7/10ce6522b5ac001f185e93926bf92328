package com.example.anketv2.business.concretes;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.anketv2.business.abstracts.SoruService;
import com.example.anketv2.business.request.saveBooleanSoruRequest;
import com.example.anketv2.business.request.saveÇoktanSeçmeliSoruRequest;
import com.example.anketv2.business.response.GetallBooleanSoruResponse;
import com.example.anketv2.business.response.GetallÇoktanSeçmeliSoruResponse;
import com.example.anketv2.core.utilities.mappers.ModelMapperService;
import com.example.anketv2.entities.concretes.BooleanSoru;
import com.example.anketv2.entities.concretes.ÇoktanSeçmeliSoru;
import com.example.anketv2.repository.BooleanSoruRepository;
import com.example.anketv2.repository.ÇoktanSeçmeliSoruRepository;
import com.example.anketv2.business.request.saveYazmaliSoruRequest;
import com.example.anketv2.business.response.GetallYazmaliSoruResponse;
import com.example.anketv2.core.utilities.mappers.ModelMapperService;
import com.example.anketv2.entities.concretes.YazmaliSoru;
import com.example.anketv2.repository.YazmaliSoruRepository;

@Service
public class SoruManager implements SoruService {
	@Autowired
	private ModelMapperService modelMapperService;
	@Autowired
	private ÇoktanSeçmeliSoruRepository çoktanSeçmeliSoruRepository;
	@Autowired
    private BooleanSoruRepository booleanSoruRepository;

	@Override
	public ÇoktanSeçmeliSoru saveSeçmeliSoru(saveÇoktanSeçmeliSoruRequest saveÇoktanSeçmeliSoruRequest) {
		ÇoktanSeçmeliSoru çoktanSeçmeliSoru = modelMapperService.forRequest().map(saveÇoktanSeçmeliSoruRequest, ÇoktanSeçmeliSoru.class);
		çoktanSeçmeliSoru.setSoru(saveÇoktanSeçmeliSoruRequest.getSoru());
		çoktanSeçmeliSoru.setOpt1(saveÇoktanSeçmeliSoruRequest.getOpt1());
		çoktanSeçmeliSoru.setOpt2(saveÇoktanSeçmeliSoruRequest.getOpt2());
		çoktanSeçmeliSoru.setOpt3(saveÇoktanSeçmeliSoruRequest.getOpt3());
		çoktanSeçmeliSoru.setOpt4(saveÇoktanSeçmeliSoruRequest.getOpt4());
		return çoktanSeçmeliSoruRepository.save(çoktanSeçmeliSoru);
	}
	


	@Override
	public List<GetallÇoktanSeçmeliSoruResponse> getallÇoktanSeçmeliSoruResponses() {
		List<ÇoktanSeçmeliSoru>çoktanSeçmeliSorus = çoktanSeçmeliSoruRepository.findAll();
		List<GetallÇoktanSeçmeliSoruResponse> çoktanSeçmeliSoruResponses = çoktanSeçmeliSorus.stream()
				.map(çoktanSeçmeliSoru ->this.modelMapperService.forResponse()
						.map(çoktanSeçmeliSoru, GetallÇoktanSeçmeliSoruResponse.class)).collect(Collectors.toList());
		return çoktanSeçmeliSoruResponses;
	}
	
    @Override
    public BooleanSoru saveBooleanSoru(saveBooleanSoruRequest saveBooleanSoruRequest) {
        BooleanSoru booleanSoru = modelMapperService.forRequest().map(saveBooleanSoruRequest, BooleanSoru.class);
        booleanSoru.setSoru(saveBooleanSoruRequest.getSoru());
        booleanSoru.setOpt1(saveBooleanSoruRequest.getOpt1());
        booleanSoru.setOpt2(saveBooleanSoruRequest.getOpt2());
        return booleanSoruRepository.save(booleanSoru);
    }

    @Override
    public List<GetallBooleanSoruResponse> getallBooleanSoruResponses() {
        List<BooleanSoru> booleanSorus = booleanSoruRepository.findAll();
        List<GetallBooleanSoruResponse> booleanSoruResponses = booleanSorus.stream()
                .map(booleanSoru -> this.modelMapperService.forResponse()
                        .map(booleanSoru, GetallBooleanSoruResponse.class)).collect(Collectors.toList());
        return booleanSoruResponses;
    }

}
